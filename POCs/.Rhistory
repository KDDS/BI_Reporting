\end{tabular}
\end{center}
\end{table}
install.packages("condformat")
library("condformat", lib.loc="~/R/win-library/3.5")
sample <- read_excel("sample.xlsx")
View(sample)
condformat(sample[c(3:33)])%>%
rule_fill_discrete(c(sample$`Net `),expression = $D3>0.5,
colours = c("TRUE"="#FF0000"))%>%
theme_grob(rows = TRUE)%>%
condformat2grob()
sample <- read_excel("sample.xlsx")
View(sample)
condformat(sample[c(3:33)])%>%
rule_fill_discrete(c(sample$`Net `),expression = sample$`Net `>0.5,
colours = c("TRUE"="#FF0000"))%>%
theme_grob(rows = TRUE)%>%
condformat2grob()
data(sample)
condformat(sample[1:5,])
condformat(sample[1:5,]) %>% rule_fill_gradient(sample$`Net `)
condformat(sample[1:5,]) %>%
rule_fill_discrete(sample$`Net `, expression=sample$`Net ` < 0.5)
data(sample)
condformat(sample[1:5,])
condformat(sample[1:5,]) %>% rule_fill_gradient(sample$`Net `)
condformat(sample[1:5,]) %>%
rule_fill_discrete(sample$`Net `, expression=sample$`Net ` > 0.5)
data(sample)
condformat(sample[1:5,])
condformat(sample[1:5,]) %>% rule_fill_gradient(sample$`Net `)
condformat(sample[1:5,]) %>%
rule_fill_discrete( expression=sample$`Net ` > 0.5)
data(sample)
condformat(sample[1:33,])
condformat(sample[1:33,]) %>% rule_fill_gradient(sample$`Net `)
condformat(sample[1:33,]) %>%
rule_fill_discrete( expression=sample$`Net ` > 0.5)
data(sample)
condformat(sample[1:33,])
condformat(sample[1:33,]) %>% rule_fill_gradient(sample$`Net `)
condformat(sample[1:33,]) %>%
rule_fill_discrete( expression=sample$`Net ` > 0.5)
data(sample)
condformat(sample[1:5,])
condformat(sample[1:5,]) %>% rule_fill_gradient(sample$`Net `)
condformat(sample[1:5,]) %>%
rule_fill_discrete( expression=sample$`Net ` > 0.5)
condformat(sample[1:10,]) %>%
rule_fill_discrete( expression=sample$`Net ` > 0.5)
data(sample)
condformat(sample[1:10,])
condformat(sample[1:10,]) %>% rule_fill_gradient(sample$`Net `)
condformat(sample[1:10,]) %>%
rule_fill_discrete( expression=sample$`Net ` > 0.5)
datatable(sample) %>%
formatStyle(sample$`Net `, fontWeight = styleInterval(5, c('normal', 'bold'))) %>%
formatStyle(
sample$`Net `,
color = styleInterval(c(3.4, 3.8), c('white', 'blue', 'red')),
backgroundColor = styleInterval(3.4, c('gray', 'yellow'))
) %>%
formatStyle(
sample$`Net `,
transform = 'rotateX(45deg) rotateY(20deg) rotateZ(30deg)',
backgroundColor = styleEqual(
unique(sample$`Net `>0.5), c('lightblue', 'lightgreen', 'lightpink')
)
)
data(sample) %>%
formatStyle(sample$`Net `, fontWeight = styleInterval(5, c('normal', 'bold'))) %>%
formatStyle(
sample$`Net `,
color = styleInterval(c(3.4, 3.8), c('white', 'blue', 'red')),
backgroundColor = styleInterval(3.4, c('gray', 'yellow'))
) %>%
formatStyle(
sample$`Net `,
transform = 'rotateX(45deg) rotateY(20deg) rotateZ(30deg)',
backgroundColor = styleEqual(
unique(sample$`Net `>0.5), c('lightblue', 'lightgreen', 'lightpink')
)
)
install.packages("formattable")
library("formattable", lib.loc="~/R/win-library/3.5")
library("condformat", lib.loc="~/R/win-library/3.5")
data(sample) %>%
formatStyle(sample$`Net `, fontWeight = styleInterval(5, c('normal', 'bold'))) %>%
formatStyle(
sample$`Net `,
color = styleInterval(c(3.4, 3.8), c('white', 'blue', 'red')),
backgroundColor = styleInterval(3.4, c('gray', 'yellow'))
) %>%
formatStyle(
sample$`Net `,
transform = 'rotateX(45deg) rotateY(20deg) rotateZ(30deg)',
backgroundColor = styleEqual(
unique(sample$`Net `>0.5), c('lightblue', 'lightgreen', 'lightpink')
)
)
data(sample)
library(readxl)
sample <- read_excel("sample.xlsx")
View(sample)
data(sample)
data("sample.xlsx")
formatStyle(sample$`Net `, fontWeight = styleInterval(5, c('normal', 'bold'))) %>%
formatStyle(
sample$`Net `,
color = styleInterval(c(3.4, 3.8), c('white', 'blue', 'red')),
backgroundColor = styleInterval(3.4, c('gray', 'yellow'))
) %>%
formatStyle(
sample$`Net `,
transform = 'rotateX(45deg) rotateY(20deg) rotateZ(30deg)',
backgroundColor = styleEqual(
unique(sample$`Net `>0.5), c('lightblue', 'lightgreen', 'lightpink')
)
)
install.packages("RPushbullet")
install.packages("RJDBC")
shiny::runApp('GTX_attendance')
install.packages("rJava")
library(RJDBC)
library(RJDBC)
library(rJava)
str(fromJSON(pbGetDevices()))
library("jsonlite", lib.loc="~/R/win-library/3.5")
install.packages("rjson")
str(fromJSON(pbGetDevices()))
library("rjson", lib.loc="~/R/win-library/3.5")
str(fromJSON(pbGetDevices()))
library(RJDBC)
library(rJava)
library("rJava", lib.loc="~/R/win-library/3.5")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="~/R/win-library/3.5")
?actionButton
?ReferenceClasses
?actionButton
?refresh
?reactivePoll
?observeEvent
shiny::runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
library(RODBC)
library (ggplot2)
connHandle <- odbcConnect("ORA_XE", uid="SYSTEM", pwd="1234")
data  = sqlQuery(connHandle, " SELECT * FROM  (
SELECT R.FIRST_NAME,
R.LAST_NAME,
- ROUND(SUM(((TO_DATE(R.TIMESTAMP||' '||R.out_time,'MM/DD/YYYY HH24:MI') -  TO_DATE(R.TIMESTAMP||' '||R.in_time,'MM/DD/YYYY HH24:MI')) *1440/60)),2) AS HOUR_DIFF,
r.timestamp
FROM RESPONSES R
WHERE r.system = 'NOBEL'
AND R.out_time IS NOT NULL
AND R.IN_time IS NOT NULL
AND  EXTRACT(YEAR FROM TO_DATE(TIMESTAMP,'MM/DD/YYYY')) = 2018
GROUP BY R.FIRST_NAME,R.LAST_NAME,R.TIMESTAMP) WHERE HOUR_DIFF > 0; "  )
data$day <- weekdays(as.Date(data$TIMESTAMP))
head(data)
defaulter <- "Red"
Ok <- "blue"
ggplot(data = data, aes(y=data$HOUR_DIFF,x=data$day)) +
geom_point(shape=15,size = 5,aes(color = ifelse(data$HOUR_DIFF<= 8,Ok,defaulter)), show.legend = T ) +
scale_color_manual(labels = c("Default", "Success"), values = c("red", "GREEN")) +
theme_bw()  +
labs(title = "Weekly Employee Performance", x= 'Days', y= 'Work Hours') + labs(col="Legend")
ggplot(data = data, aes(y=data$HOUR_DIFF,x=data$day)) +
geom_point(shape=15,size = 5,aes(color = ifelse(data$HOUR_DIFF<= 8,Ok,defaulter)), show.legend = T ) +
scale_color_manual(labels = c("Default", "Success"), values = c("red", "GREEN")) +
theme_minimal()  +
labs(title = "Weekly Employee Performance", x= 'Days', y= 'Work Hours') + labs(col="Legend")
ggplot(data = data, aes(y=data$HOUR_DIFF,x=data$day)) +
geom_point(shape=15,size = 5,aes(color = ifelse(data$HOUR_DIFF<= 8,Ok,defaulter)), show.legend = T ) +
scale_color_manual(labels = c("Default", "Success"), values = c("red", "GREEN")) +
theme_classic()  +
labs(title = "Weekly Employee Performance", x= 'Days', y= 'Work Hours') + labs(col="Legend")
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
labs(title = "Weekly Employee Performance \n", x= '', y= 'Work Hours') + labs(col="Legend")+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
labs(title = "Weekly Employee Performance \n", x= ' ', y= 'Work Hours') + labs(col="Legend")+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
labs(title = "Weekly Employee Performance \n", x= ' hghg', y= 'Work Hours') + labs(col="Legend")+
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA)
)
ggplot(data = data, aes(y=data$HOUR_DIFF,x=data$day)) +
geom_point(shape=15,size = 5,aes(color = ifelse(data$HOUR_DIFF<= 8,Ok,defaulter)), show.legend = T ) +
scale_color_manual(labels = c("Default", "Success"), values = c("red", "GREEN")) +
theme_minimal()  +
labs(title = "Weekly Employee Performance", x= 'Days', y= 'Work Hours') + labs(col="Legend")
ggplot(data = data, aes(y=data$HOUR_DIFF,x=data$day)) +
geom_point(shape=15,size = 5,aes(color = ifelse(data$HOUR_DIFF<= 8,Ok,defaulter)), show.legend = T ) +
scale_color_manual(labels = c("Default", "Success"), values = c("red", "GREEN")) +
theme_minimal()  +
labs(title = "Weekly Employee Performance", x= '', y= 'Work Hours') + labs(col="Legend")
ggplot(data = data, aes(y=data$HOUR_DIFF,x=data$day)) +
geom_point(shape=15,size = 5,aes(color = ifelse(data$HOUR_DIFF<= 8,Ok,defaulter)), show.legend = T ) +
scale_color_manual(labels = c("Default", "Success"), values = c("red", "GREEN")) +
theme_minimal(base_size = 22)  +
labs(title = "Weekly Employee Performance", x= '', y= 'Work Hours') + labs(col="Legend")
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
ggplot(data = data, aes(y=data$HOUR_DIFF,x=data$day)) +
geom_point(shape=15,size = 5,aes(color = ifelse(data$HOUR_DIFF<= 8,Ok,defaulter)), show.legend = T ) +
scale_color_manual(labels = c("Default", "Success"), values = c("red", "GREEN")) +
theme_minimal(base_size = 22)  +
labs(title = "Weekly Employee Performance", x= '', y= 'Work Hours') + labs(col="Legend")
runApp('Internship - GTX/BI_Reporting/POCs')
?panel.background
?element_rect
runApp('Internship - GTX/BI_Reporting/POCs')
sqlQuery(connHandle, "SELECT * FROM responses")
sqlQuery(connHandle, "SELECT FIRST_NAME FROM responses")
sqlQuery(connHandle, "SELECT FIRST_NAME||' '||LAST_NAME FROM responses")
sqlQuery(connHandle, "SELECT unique(FIRST_NAME||' '||LAST_NAME) FROM responses")
sqlQuery(connHandle, "SELECT distinct(FIRST_NAME||' '||LAST_NAME) FROM responses")
z <- sqlQuery(connHandle, "SELECT distinct(FIRST_NAME||' '||LAST_NAME) FROM responses")
View(z)
View(z)
head(z)
z <- sqlQuery(connHandle, "SELECT distinct(FIRST_NAME||' '||LAST_NAME) as users FROM responses")
head(z)
View(z)
dtypes(z)
class(z)
list(z)
z<- list(z)
View(z)
z
z <- lsit(sqlQuery(connHandle, "SELECT distinct(FIRST_NAME||' '||LAST_NAME) as users FROM responses"))
z <- list(sqlQuery(connHandle, "SELECT distinct(FIRST_NAME||' '||LAST_NAME) as users FROM responses"))
head(z)
class(z)
runApp('Internship - GTX/BI_Reporting/POCs')
View(data)
u1 <- list(sqlQuery(connHandle, "select * from users FROM responses"))
u1 <- sqlQuery(connHandle, "select * from users FROM responses")
u1 <- sqlQuery(connHandle, "select *  FROM responses")
View(u1)
u1$TIMESTAMP <- as.Date(u1$TIMESTAMP, "%m/%d/%Y")
summarise(u1)
describe(u1)
u1
describe(u1)
str(u1)
u1 <- sqlQuery(connHandle, "SELECT R.FIRST_NAME||' '|| R.LAST_NAME,
- ROUND(SUM(((TO_DATE(R.TIMESTAMP||' '||R.out_time,'MM/DD/YYYY HH24:MI') -  TO_DATE(R.TIMESTAMP||' '||R.in_time,'MM/DD/YYYY HH24:MI')) *1440/60)),2) AS HOUR_DIFF,
r.timestamp
FROM RESPONSES R
WHERE r.system = 'NOBEL'
AND R.out_time IS NOT NULL
AND R.IN_time IS NOT NULL
AND  EXTRACT(YEAR FROM TO_DATE(TIMESTAMP,'MM/DD/YYYY')) = 2018
GROUP BY R.FIRST_NAME,R.LAST_NAME,R.TIMESTAMP) WHERE HOUR_DIFF > 0;")
u1$TIMESTAMP <- as.Date(u1$TIMESTAMP, "%m/%d/%Y")
u1 <- sqlQuery(connHandle, "SELECT R.FIRST_NAME||' '|| R.LAST_NAME,
- ROUND(SUM(((TO_DATE(R.TIMESTAMP||' '||R.out_time,'MM/DD/YYYY HH24:MI') -  TO_DATE(R.TIMESTAMP||' '||R.in_time,'MM/DD/YYYY HH24:MI')) *1440/60)),2) AS HOUR_DIFF,
r.timestamp
FROM RESPONSES R
WHERE r.system = 'NOBEL'
AND R.out_time IS NOT NULL
AND R.IN_time IS NOT NULL
AND  EXTRACT(YEAR FROM TO_DATE(TIMESTAMP,'MM/DD/YYYY')) = 2018
GROUP BY R.FIRST_NAME,R.LAST_NAME,R.TIMESTAMP) WHERE HOUR_DIFF > 0;")
SELECT R.FIRST_NAME||' '|| R.LAST_NAME,
- ROUND(SUM(((TO_DATE(R.TIMESTAMP||' '||R.out_time,'MM/DD/YYYY HH24:MI') -  TO_DATE(R.TIMESTAMP||' '||R.in_time,'MM/DD/YYYY HH24:MI')) *1440/60)),2) AS HOUR_DIFF,
r.timestamp
FROM RESPONSES R
WHERE r.system = 'NOBEL'
AND R.out_time IS NOT NULL
AND R.IN_time IS NOT NULL
AND  EXTRACT(YEAR FROM TO_DATE(TIMESTAMP,'MM/DD/YYYY')) = 2018
GROUP BY R.FIRST_NAME,R.LAST_NAME,R.TIMESTAMP) WHERE HOUR_DIFF > 0;
u1 <- sqlQuery(connHandle, "SELECT R.FIRST_NAME||' '|| R.LAST_NAME,
- ROUND(SUM(((TO_DATE(R.TIMESTAMP||' '||R.out_time,'MM/DD/YYYY HH24:MI') -  TO_DATE(R.TIMESTAMP||' '||R.in_time,'MM/DD/YYYY HH24:MI')) *1440/60)),2) AS HOUR_DIFF,
r.timestamp
FROM RESPONSES R
WHERE r.system = 'NOBEL'
AND R.out_time IS NOT NULL
AND R.IN_time IS NOT NULL
AND  EXTRACT(YEAR FROM TO_DATE(TIMESTAMP,'MM/DD/YYYY')) = 2018
GROUP BY R.FIRST_NAME,R.LAST_NAME,R.TIMESTAMP) WHERE HOUR_DIFF > 0;")
u1 <- sqlQuery(connHandle, "SELECT R.FIRST_NAME||' '|| R.LAST_NAME as usernames,
- ROUND(((TO_DATE(R.TIMESTAMP||' '||R.out_time,'MM/DD/YYYY HH24:MI') -  TO_DATE(R.TIMESTAMP||' '||R.in_time,'MM/DD/YYYY HH24:MI')) *1440/60),2) AS HOUR_DIFF,
r.timestamp
FROM RESPONSES R
WHERE r.system = 'NOBEL'
AND R.out_time IS NOT NULL
AND R.IN_time IS NOT NULL
AND  EXTRACT(YEAR FROM TO_DATE(TIMESTAMP,'MM/DD/YYYY')) = 2018")
u1$TIMESTAMP <- as.Date(u1$TIMESTAMP, "%m/%d/%Y")
ggplot(data = u1, aes(x = TIMESTAMP, y = hour_diff))+
geom_line(color = "#00AFBB", size = 2)
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_line(color = "#00AFBB", size = 2)
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(color = "skyblue",stat = identity)
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(color = "skyblue",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill = "skyblue",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill = "green",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill = "brown",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill = "blue",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill = "royalblue",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill = "royalblue",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(colour = "royalblue",stat = "identity")
fill
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(aes(colour = "royalblue"),stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(aes(colours = "royalblue"),stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(aes(col = "royalblue"),stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(col = "royalblue",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + geom_histogram()
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + geom_abline()
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + geom_line(stat = 'identity')
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + geom_line()
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic()
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 22)  +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10)  +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_classic(base_size = 10)  +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_bw(base_size = 10)  +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
minimal
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10)  +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
library (dplyr)
shiny::runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
ggplot(data = u1 %>% filter(u1$USERNAMES == 'u'), aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10)  +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10)  +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
u1 %>% filter(u1$USERNAMES == 'USER TWO')
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))
ggplot(data = u1 , aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF, GROUP=1))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF, GROUP=1))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF, groups=1))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF, groups=u1$USERNAMES))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
x <- u1 %>% filter(u1$USERNAMES == 'USER TWO')
x
yy <- u1 %>% filter(u1$USERNAMES == 'USER TWO')
ggplot(data = yy, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity")
ggplot(data = yy, aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))+
geom_line()
ggplot(data = yy)+
geom_line(aes(x = u1$TIMESTAMP, y = u1$HOUR_DIFF))
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend")
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend") + geom_boxplot()
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend") + geom_smooth()
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend") + geom_smooth(level = .65, se= T)
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend") + geom_smooth(level = .65, se= F)
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend") + geom_smooth(level = .65, se= F, colour = 'red')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
sqlQuery(connHandle_1, "SELECT distinct(FIRST_NAME||' '||LAST_NAME) as users FROM responses")
sqlQuery(connHandle, "SELECT distinct(FIRST_NAME||' '||LAST_NAME) as users FROM responses")
connHandle <- odbcConnect("ORA_XE", uid="SYSTEM", pwd="1234")
sqlQuery(connHandle, "SELECT distinct(FIRST_NAME||' '||LAST_NAME) as users FROM responses")
runApp('Internship - GTX/BI_Reporting/POCs')
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend") + geom_smooth(level = .65, se= F, colour = 'red')+    coord_equal(1/0.2)
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend") + geom_smooth(level = .65, se= F, colour = 'red')+    coord_equal(10/0.2)
ggplot(data = u1 %>% filter(u1$USERNAMES == 'USER TWO'), aes(x = TIMESTAMP, y = HOUR_DIFF))+
geom_bar(fill ='royalblue', col = "black",stat = "identity") + theme_classic() +
theme_minimal(base_size = 10) +
labs(x= '', y= 'Working Hours') + labs(col="Legend") + geom_smooth(level = .65, se= F, colour = 'red')+    coord_equal(.1/0.2)
?coord_equal
?coord_equal
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
date()
system.time(as.Date(xx, "%m/%d/%Y"))
Sys.time()
DATE()
date()
format(Sys.Date(),"%d %Mon /%Y")
format(Sys.Date(),"%d%M/%Y")
format(Sys.Date(),"%d%M/%Y")
Sys.Date()
format(Sys.Date(),"%Y%M%d")
format(Sys.Date(),"%Y/%M/%d")
format(Sys.Date(),"%Y/%m/%d")
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
runApp('Internship - GTX/BI_Reporting/POCs')
shiny::runApp('Internship - GTX/BI_Reporting/POCs')
shiny::runApp('Internship - GTX/BI_Reporting/POCs')
shiny::runApp('Internship - GTX/BI_Reporting/POCs')
