create or replace PROCEDURE PR_POPULATE_DAILY_NOBEL_DATA (
 DATE_GAP IN NUMBER
) IS
BEGIN

EXECUTE IMMEDIATE 'truncate table DAILY_NOBLE_DATA';

INSERT INTO DAILY_NOBLE_DATA  (
    SELECT
        DAILY_SEQ.NEXTVAL,
        AGENT_NAME,
        CODE, 
        CONTACT_DATE,
        LOGON_TIME,
        LOGOFF_TIME,
        CONNECTED,
        WAITING,
        PAUSED,
        DEASSIGN,
        ACW,
        TOTAL,
        NULL
    FROM
        STAGING_NOBLE
    WHERE
        CONTACT_DATE = TO_DATE(SYSDATE - DATE_GAP, 'mm/dd/yyyy'));
        
        
UPDATE DAILY_NOBLE_DATA
SET
    FLAG = 'CONTINUED' WHERE ID IN (
SELECT
      ND1.ID
FROM
    DAILY_NOBLE_DATA   ND1
    INNER JOIN DAILY_NOBLE_DATA   ND2 ON ND1.AGENT_NAME = ND2.AGENT_NAME
WHERE
    TO_NUMBER(REPLACE(ND1.LOGON_TIME, ':', '')) - TO_NUMBER(REPLACE(ND2.LOGOFF_TIME, ':', '')) > 120000)
 OR ROWID IN (SELECT T1.ROWID FROM DAILY_NOBLE_DATA T1,  
(SELECT * FROM (
                   SELECT ROWID,DND.LOGON_TIME,DND.AGENT_NAME,
                          ROW_NUMBER() OVER (PARTITION BY DND.CONTACT_DATE,DND.AGENT_NAME ORDER BY DND.LOGON_TIME ASC) AS TOTAL
                     FROM DAILY_NOBLE_DATA  DND
                    )
 WHERE TO_NUMBER(REPLACE(LOGON_TIME, ':', '')) > 210000
   AND TOTAL = 1) T2
WHERE  T1.LOGON_TIME >= T2.LOGON_TIME 
AND T1.AGENT_NAME = T2.AGENT_NAME
AND T1.FLAG IS NULL);

MERGE INTO DIM_AGENT DA
USING (SELECT DISTINCT AGENT_NAME AS AGENTS,CODE FROM DAILY_NOBLE_DATA DND WHERE DND.CONTACT_DATE = TO_DATE(SYSDATE - DATE_GAP, 'mm/dd/yyyy'))
ON (AGENTS = DA.AGENT_NAME)
WHEN NOT MATCHED THEN
INSERT (AGENT_ID, AGENT_NAME)
VALUES (CODE, AGENTS);
    
COMMIT;

END;