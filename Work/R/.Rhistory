shiny::runApp('Work/BI_Reporting/Work/R')
install.packages('Shinyjs')
install.packages('shinyjs')
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
install.packages("shinyWidgets")
runApp('Work/BI_Reporting/Work/R')
all_days <- c("Sunday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Monday")
substr(all_day,4,6)
substr(all_days,4,6)
substr(all_days,1,3)
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
install.packages("plyr")
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
runApp('Work/BI_Reporting/Work/R')
shiny::runApp()
library(ggplot2)
library(RODBCext)
library(shinythemes)
library(DT)
library(shinyjs)
library(shinyWidgets)
library(reshape)
library(viridis)
library(wesanderson)
# create the oracle connection
connHandle <- odbcConnect("ORA_XE", uid = "SYSTEM", pwd = "1234")
# fset the date format in the database query session
querystring1 = "alter session set nls_date_format = 'mm/dd/yyyy'"
sqlQuery(connHandle, querystring1)
# fetch all data from  daily_noble_data_fact
data_temp  <- sqlQuery(connHandle, "
SELECT DA.AGENT_NAME,DW.WEEK_DAY,DS.SHIFT_TYPE,DF.CONTACT_DATE,TOTAL_CONNECTED_IN_HRS,
TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS,
TOTAL_SUMMARY_IN_HRS, TOTAL_CONNECTED_IN_MINS, TOTAL_WAITING_IN_MINS,
TOTAL_PAUSED_IN_MINS, TOTAL_DEASSIGN_IN_MINS, TOTAL_SUMMARY_IN_MINS
FROM
DIM_AGENT DA,
DIM_SHIFTS DS,
DIM_WEEKS DW,
DAILY_NOBLE_DATA_FACT DF
WHERE
DF.AGENT_ID =DA.AGENT_ID
AND DS.SHIFT_ID=DF.SHIFT_ID
AND DW.WEEK_ID = DF.WEEK_ID
AND DF.CONTACT_DATE >= TO_DATE(SYSDATE - 7, 'MM/DD/YYYY');",stringsAsFactors = F
)
KPI_perf_overall <- data_temp %>%
select(SHIFT_TYPE,WEEK_DAY,AGENT_NAME,TOTAL_CONNECTED_IN_HRS,TOTAL_WAITING_IN_HRS, TOTAL_PAUSED_IN_HRS, TOTAL_DEASSIGN_IN_HRS)  %>%
group_by(SHIFT_TYPE,WEEK_DAY,AGENT_NAME)  %>% summarise_all(funs(sum))
filter_var <- list()
group_var <-  list('SHIFT_TYPE','WEEK_DAY')
filter_val <- list()
values_var <- list('TOTAL_CONNECTED_IN_HRS',
'TOTAL_WAITING_IN_HRS',
'TOTAL_PAUSED_IN_HRS',
'TOTAL_DEASSIGN_IN_HRS')
select_var <- c(group_var,values_var)
all_shifts <- c("Morning", "Afternoon", "Night")
dynamic_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(select_var)) %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
library(RODBC)
library(dplyr)
dynamic_data <- reshape2::melt(dynamic_data, measure.vars = unlist(values_var))
dynamic_data <- dynamic_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == (input$datatable_one_cell_clicked)[3]) %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
View(individual_data)
library(fmsb)
radarchart(data)
radarchart(individual_data)
data=as.data.frame(matrix( sample( 2:20 , 10 , replace=T) , ncol=10))
colnames(data)=c("math" , "english" , "biology" , "music" , "R-coding", "data-viz" , "french" , "physic", "statistic", "sport" )
# To use the fmsb package, I have to add 2 lines to the dataframe: the max and min of each topic to show on the plot!
data=rbind(rep(20,10) , rep(0,10) , data)
View(data)
radarchart(data)
radarchart(data)
radarchart(individual_data)
radarchart(individual_data, axistype= 2)
radarchart(individual_data, axistype= 2)
radarchart(individual_data, axistype= 3)
individual_data[1,]
radarchart(rbind(rep(1,100), rep(0,100), individual_data[1,]))
View(dynamic_data)
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(dynamic_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- dcast(individual_data, ~variable)
individual_data <- reshape2::dcast(individual_data, ~variable)
individual_data <- reshape2::dcast(individual_data, ~variable)
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- t(individual_data)
colnames(individual_data) <- individual_data[1,]
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- t(individual_data)
individual_data[1,]
colnames(individual_data) <- individual_data[1,]
View(individual_data)
individual_data[-1,]
individual_data <- individual_data[-1,]
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- t(individual_data)
colnames(individual_data) <- individual_data[1,]
individual_data <- individual_data[-1,]
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- t(individual_data)
View(individual_data)
colnames(individual_data) <- individual_data[1,]
View(individual_data)
individual_data[-1,]
val <- individual_data[-1,]
val
head(val)
class(val)
class(data_temp)
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- t(individual_data)
individual_data <- data.frame(individual_data, keep.rownames=T)
colnames(individual_data) <- individual_data[1,]
individual_data[1,]
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- t(individual_data)
individual_data <- data.frame(individual_data)
individual_data[1,]
colnames(individual_data) <- values_var
individual_data <- individual_data[2,]
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- t(individual_data)
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- data.frame(individual_data)
individual_data <- individual_data[2,]
colnames(individual_data) <- values_var
rownames(individual_data) = 1
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- data.frame(t(individual_data))[2,]
colnames(individual_data) <- values_var
rownames(individual_data) = 1
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
individual_data <- data.frame(t(individual_data))[2,]
colnames(individual_data) <- values_var
rownames(individual_data) = 1
radarchart(rbind(rep(1,100), rep(0,100), individual_data[1,]))
individual_data[1,]
install.packages('plotly')
individual_data <- KPI_perf_overall %>% ungroup() %>%
select_(.dots = unlist(c('AGENT_NAME',select_var))) %>%
filter(.,AGENT_NAME == 'Michelle Dcruz') %>%
select_(.dots = values_var) %>%
summarise_all(funs(sum))
individual_data <- reshape2::melt(individual_data, measure.vars = unlist(values_var))
individual_data <- individual_data %>%   mutate_at(vars(value), funs(./sum(value)*100))
librart ('plotly')
library ('plotly')
plot_ly(
type = 'scatterpolar',
r = individual_data$value,
theta = individual_data$variable,
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,100)
)
),
showlegend = F
)
ply <- plot_ly(
type = 'scatterpolar',
r = individual_data$value,
theta = individual_data$variable,
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,100)
)
),
showlegend = F
)
plotly::config(ply, collaborate = F, doubleClick = F, displayModeBar = F)
strsplit(individual_data$variable,'_')
strsplit(individual_data$variable,'_')
?strsplit
individual_data$variable
strplit(unlist(individual_data$variable),'_')
strsplit(unlist(individual_data$variable),'_')
individual_data$variable
strsplit(values_var,'_')
sapply(individual_data$variable, function(x) strsplit(x, "_")[[1]], USE.NAMES=FALSE)
sapply(unlist(individual_data$variable), function(x) strsplit(x, "_")[[1]], USE.NAMES=FALSE)
sapply(unlist(individual_data$variable), function(x) strsplit(x, "_"), USE.NAMES=FALSE)
library(plyr)
ldply(strsplit(values_var, '_'))
ply <- plot_ly(
type = 'scatterpolar',
r = individual_data$value,
theta = c('Connected','Waiting','Paused','Deassign'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,100)
)
),
showlegend = F
)
ply <- plot_ly(
type = 'scatterpolar',
r = individual_data$value,
theta = c('Connected','Waiting','Paused','Deassign'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,100)
)
),
showlegend = F
)
ply <- plot_ly(
type = 'scatterpolar',
r = individual_data$value,
theta =  individual_data$$variable #c('Connected','Waiting','Paused','Deassign'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,100)
)
),
showlegend = F
)
ply <- plot_ly(
type = 'scatterpolar',
r = individual_data$value,
theta =  individual_data$variable #c('Connected','Waiting','Paused','Deassign'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,100)
)
),
showlegend = F
)
ply <- plot_ly(
type = 'scatterpolar',
r = individual_data$value,
theta =  individual_data$variable, #c('Connected','Waiting','Paused','Deassign'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,100)
)
),
showlegend = F
)
library ('plotly')
ply <- plot_ly(
type = 'scatterpolar',
r = individual_data$value,
theta =  individual_data$variable, #c('Connected','Waiting','Paused','Deassign'),
fill = 'toself'
) %>%
layout(
polar = list(
radialaxis = list(
visible = T,
range = c(0,100)
)
),
showlegend = F
)
detach("package:plyr", unload=TRUE)
